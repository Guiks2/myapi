{
    "swagger": "2.0",
    "info": {
        "title": "Ma premi\u00e8re API",
        "description": "Une API permettant l'acc\u00e8s aux donn\u00e9es de la base via une approche RESTful",
        "termsOfService": "",
        "contact": {
            "name": "Guiks",
            "email": "guillaume.delapre@gmail.com"
        },
        "version": "1.0.0"
    },
    "host": "myapi.com",
    "basePath": "/",
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/distributeur": {
            "get": {
                "tags": [
                    "distributeur"
                ],
                "summary": "Display a listing of distributors.",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Distributeur"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "distributeur"
                ],
                "summary": "Create a distributor",
                "description": "Use this method to create a distributor",
                "operationId": "createDistributor",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "nom",
                        "in": "formData",
                        "description": "Nom du distributeur",
                        "required": true,
                        "type": "string",
                        "maximum": "255"
                    },
                    {
                        "name": "adresse",
                        "in": "formData",
                        "description": "Adresse du distributeur",
                        "required": false,
                        "type": "string",
                        "maximum": "255"
                    },
                    {
                        "name": "cpostal",
                        "in": "formData",
                        "description": "Code postal du distributeur",
                        "required": false,
                        "type": "string",
                        "maximum": "255"
                    },
                    {
                        "name": "ville",
                        "in": "formData",
                        "description": "Ville du distributeur",
                        "required": false,
                        "type": "string",
                        "maximum": "255"
                    },
                    {
                        "name": "pays",
                        "in": "formData",
                        "description": "Pays du distributeur",
                        "required": false,
                        "type": "string",
                        "maximum": "255"
                    },
                    {
                        "name": "telephone",
                        "in": "formData",
                        "description": "T\u00e9l\u00e9phone du distributeur",
                        "required": true,
                        "type": "string",
                        "maximum": "255"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Distributor created",
                        "schema": {
                            "$ref": "#/definitions/Distributeur"
                        }
                    },
                    "422": {
                        "description": "Champs manquant obligatoire ou incorrect"
                    }
                }
            }
        },
        "/distributeur/{id_distributeur}": {
            "get": {
                "tags": [
                    "distributeur"
                ],
                "summary": "Display a single distributor",
                "description": "Use this method to return a single distributor attributes based on its id.",
                "operationId": "showDistributor",
                "parameters": [
                    {
                        "name": "id_distributeur",
                        "in": "path",
                        "description": "id of distributeur to fetch",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Distributeur"
                        }
                    },
                    "404": {
                        "description": "Distributeur not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "distributeur"
                ],
                "summary": "Update a distributor",
                "description": "Use this method to update the attributes of a distributor based on its id.",
                "operationId": "updateDistributor",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id_distributeur",
                        "in": "path",
                        "description": "Nom du distributeur",
                        "required": true,
                        "type": "integer",
                        "maximum": "11"
                    },
                    {
                        "name": "nom",
                        "in": "formData",
                        "description": "Nom du distributeur",
                        "required": true,
                        "type": "string",
                        "maximum": "255"
                    },
                    {
                        "name": "adresse",
                        "in": "formData",
                        "description": "Adresse du distributeur",
                        "required": false,
                        "type": "string",
                        "maximum": "255"
                    },
                    {
                        "name": "cpostal",
                        "in": "formData",
                        "description": "Code postal du distributeur",
                        "required": false,
                        "type": "string",
                        "maximum": "255"
                    },
                    {
                        "name": "ville",
                        "in": "formData",
                        "description": "Ville du distributeur",
                        "required": false,
                        "type": "string",
                        "maximum": "255"
                    },
                    {
                        "name": "pays",
                        "in": "formData",
                        "description": "Pays du distributeur",
                        "required": false,
                        "type": "string",
                        "maximum": "255"
                    },
                    {
                        "name": "telephone",
                        "in": "formData",
                        "description": "T\u00e9l\u00e9phone du distributeur",
                        "required": true,
                        "type": "string",
                        "maximum": "255"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Distributor updated",
                        "schema": {
                            "$ref": "#/definitions/Distributeur"
                        }
                    },
                    "422": {
                        "description": "Champs manquants obligatoires ou incorrects"
                    }
                }
            },
            "delete": {
                "tags": [
                    "distributeur"
                ],
                "summary": "Delete a distributor",
                "description": "Use this method to delete a distributor based on its id.",
                "operationId": "deleteDistributor",
                "parameters": [
                    {
                        "name": "id_distributeur",
                        "in": "path",
                        "description": "Distributor ID to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Distributor deleted"
                    },
                    "404": {
                        "description": "Invalid distributor value"
                    }
                }
            }
        },
        "/employe": {
            "get": {
                "tags": [
                    "employe"
                ],
                "summary": "Display a listing of employes.",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Employe"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "employe"
                ],
                "summary": "Create a employe",
                "description": "Use this method to create a employe",
                "operationId": "createEmploye",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id_personne",
                        "in": "formData",
                        "description": "ID personne",
                        "required": true,
                        "type": "integer",
                        "maximum": "11"
                    },
                    {
                        "name": "id_fonction",
                        "in": "formData",
                        "description": "ID fonction",
                        "required": true,
                        "type": "integer",
                        "maximum": "11"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "employe created",
                        "schema": {
                            "$ref": "#/definitions/Employe"
                        }
                    },
                    "422": {
                        "description": "Champs manquant obligatoire ou incorrect"
                    }
                }
            }
        },
        "/employe/{id_employe}": {
            "get": {
                "tags": [
                    "employe"
                ],
                "summary": "Display a single employe",
                "description": "Use this method to return a single employe attributes based on its id.",
                "operationId": "showEmploye",
                "parameters": [
                    {
                        "name": "id_employe",
                        "in": "path",
                        "description": "id of employe to fetch",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Employe"
                        }
                    },
                    "404": {
                        "description": "Employe not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "employe"
                ],
                "summary": "Update an employee",
                "description": "Use this method to update the attributes of a employee based on its id.",
                "operationId": "updateEmploye",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id_employe",
                        "in": "path",
                        "description": "ID employ\u00e9",
                        "required": true,
                        "type": "integer",
                        "maximum": "11"
                    },
                    {
                        "name": "id_personne",
                        "in": "formData",
                        "description": "ID personne",
                        "required": true,
                        "type": "integer",
                        "maximum": "11"
                    },
                    {
                        "name": "id_fonction",
                        "in": "formData",
                        "description": "ID fonction",
                        "required": true,
                        "type": "integer",
                        "maximum": "11"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Distributor updated",
                        "schema": {
                            "$ref": "#/definitions/Employe"
                        }
                    },
                    "422": {
                        "description": "Champs manquants obligatoires ou incorrects"
                    }
                }
            },
            "delete": {
                "tags": [
                    "employe"
                ],
                "summary": "Delete a employe",
                "description": "Use this method to delete a employe based on its id.",
                "operationId": "deleteEmploye",
                "parameters": [
                    {
                        "name": "id_employe",
                        "in": "path",
                        "description": "Employe ID to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employe deleted"
                    },
                    "404": {
                        "description": "Invalid employe value"
                    }
                }
            }
        },
        "/film": {
            "get": {
                "tags": [
                    "film"
                ],
                "summary": "Get a film list",
                "description": "Use this method to return a listing of films.",
                "operationId": "listFilm",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Film"
                            }
                        }
                    },
                    "204": {
                        "description": "The request didn't return any content."
                    }
                }
            },
            "post": {
                "tags": [
                    "film"
                ],
                "summary": "Create a film",
                "description": "Use this method to create a new film.",
                "operationId": "createFilm",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "titre",
                        "in": "formData",
                        "description": "Name of the film",
                        "required": true,
                        "type": "string",
                        "maximum": "255"
                    },
                    {
                        "name": "resum",
                        "in": "formData",
                        "description": "Resume of the film",
                        "required": true,
                        "type": "string",
                        "maximum": "255"
                    },
                    {
                        "name": "date_debut_affiche",
                        "in": "formData",
                        "description": "Date d\u00e9but affiche",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "date_fin_affiche",
                        "in": "formData",
                        "description": "Date fin affiche",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "duree_minutes",
                        "in": "formData",
                        "description": "Dur\u00e9e en minutes",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "annee_production",
                        "in": "formData",
                        "description": "Ann\u00e9e de production",
                        "required": true,
                        "type": "integer",
                        "maximum": "4"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Film created",
                        "schema": {
                            "$ref": "#/definitions/Film"
                        }
                    },
                    "422": {
                        "description": "Champs manquant obligatoire ou incorrect"
                    }
                }
            }
        },
        "/film/{id_film}": {
            "get": {
                "tags": [
                    "film"
                ],
                "summary": "Display a single film",
                "description": "Use this method to return a single film attributes based on its id.",
                "operationId": "showFilm",
                "parameters": [
                    {
                        "name": "id_film",
                        "in": "path",
                        "description": "id of film to fetch",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Film"
                        }
                    },
                    "404": {
                        "description": "Film not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "film"
                ],
                "summary": "Update a film",
                "description": "Use this method to update the attributes of a film based on its id.",
                "operationId": "updateFilm",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "titre",
                        "in": "formData",
                        "description": "Name of the film",
                        "required": true,
                        "type": "string",
                        "maximum": "255"
                    },
                    {
                        "name": "resum",
                        "in": "formData",
                        "description": "Resume of the film",
                        "required": true,
                        "type": "string",
                        "maximum": "255"
                    },
                    {
                        "name": "date_debut_affiche",
                        "in": "formData",
                        "description": "Date d\u00e9but affiche",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "date_fin_affiche",
                        "in": "formData",
                        "description": "Date fin affiche",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "duree_minutes",
                        "in": "formData",
                        "description": "Dur\u00e9e en minutes",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "annee_production",
                        "in": "formData",
                        "description": "Ann\u00e9e de production",
                        "required": true,
                        "type": "integer",
                        "maximum": "4"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Film updated",
                        "schema": {
                            "$ref": "#/definitions/Film"
                        }
                    },
                    "422": {
                        "description": "Champs manquants obligatoires ou incorrects"
                    }
                }
            },
            "delete": {
                "tags": [
                    "film"
                ],
                "summary": "Delete a film",
                "description": "Use this method to delete a film based on its id.",
                "operationId": "deleteFilm",
                "parameters": [
                    {
                        "name": "id_film",
                        "in": "path",
                        "description": "Film ID to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FIlm deleted"
                    },
                    "404": {
                        "description": "Invalid film value"
                    }
                }
            }
        }
    },
    "definitions": {
        "Abonnement": {
            "required": [
                "id_forfait",
                "debut"
            ],
            "properties": {
                "id_forfait": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "debut": {
                    "type": "date",
                    "format": "date",
                    "default": "1992-01-01"
                }
            },
            "xml": {
                "name": "Abonnement"
            }
        },
        "Distributeur": {
            "required": [
                "nom",
                "telephone"
            ],
            "properties": {
                "id_distributeur": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "nom": {
                    "type": "string",
                    "format": "string",
                    "default": ""
                },
                "telephone": {
                    "type": "string",
                    "format": "string",
                    "default": ""
                },
                "adresse": {
                    "type": "string",
                    "format": "string",
                    "default": ""
                },
                "cpostal": {
                    "type": "string",
                    "format": "string",
                    "default": ""
                },
                "ville": {
                    "type": "string",
                    "format": "string",
                    "default": ""
                },
                "pays": {
                    "type": "string",
                    "format": "string",
                    "default": ""
                }
            },
            "xml": {
                "name": "Distributeur"
            }
        },
        "Employe": {
            "required": [
                "id_personne",
                "id_fonction"
            ],
            "properties": {
                "id_employe": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "id_personne": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "id_fonction": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                }
            },
            "xml": {
                "name": "Employe"
            }
        },
        "Film": {
            "required": [
                "titre"
            ],
            "properties": {
                "id_film": {
                    "type": "number",
                    "format": "int64",
                    "default": 42
                },
                "id_genre": {
                    "type": "number",
                    "format": "int64",
                    "default": 0
                },
                "id_distributeur": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "titre": {
                    "type": "string",
                    "format": "string",
                    "default": "Pulp Fiction"
                },
                "resum": {
                    "type": "string",
                    "format": "string",
                    "default": "Dans un caf\u00e9 restaurant de Los Angeles, dans la matin\u00e9e, un couple de jeunes braqueurs, Pumpkin et Yolanda, discutent des risques que comporte leur activit\u00e9. Ils se d\u00e9cident finalement \u00e0 attaquer le lieu, afin de pouvoir d\u00e9valiser \u00e0 la fois l'\u00e9tablissement et les clients."
                },
                "date_debut_affiche": {
                    "type": "date",
                    "format": "date",
                    "default": "1994-01-01"
                },
                "date_fin_affiche": {
                    "type": "date",
                    "format": "date",
                    "default": "1994-04-01"
                },
                "duree_minutes": {
                    "type": "number",
                    "format": "int64",
                    "default": 154
                },
                "annee_production": {
                    "type": "number",
                    "format": "int64",
                    "default": 1994
                }
            },
            "xml": {
                "name": "Film"
            }
        },
        "Fonction": {
            "required": [
                "nom",
                "salaire",
                "cadre"
            ],
            "properties": {
                "id_fonction": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "nom": {
                    "type": "string",
                    "format": "string",
                    "default": ""
                },
                "salaire": {
                    "type": "string",
                    "format": "string",
                    "default": ""
                },
                "cadre": {
                    "type": "tinyint",
                    "format": "int64",
                    "default": 1
                }
            },
            "xml": {
                "name": "Fonction"
            }
        },
        "Forfait": {
            "required": [
                "nom",
                "resum",
                "prix",
                "duree_jours"
            ],
            "properties": {
                "id_forfait": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "nom": {
                    "type": "string",
                    "format": "string",
                    "default": ""
                },
                "resum": {
                    "type": "string",
                    "format": "string",
                    "default": ""
                },
                "prix": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "duree_jours": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                }
            },
            "xml": {
                "name": "Forfait"
            }
        },
        "Genre": {
            "required": [
                "nom"
            ],
            "properties": {
                "id_genre": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "nom": {
                    "type": "string",
                    "format": "string",
                    "default": ""
                }
            },
            "xml": {
                "name": "Genre"
            }
        },
        "HistoriqueMembre": {
            "required": [
                "id_membre",
                "id_seance",
                "date"
            ],
            "properties": {
                "id_historique": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "id_membre": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "id_seance": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "date": {
                    "type": "date",
                    "format": "date",
                    "default": ""
                }
            },
            "xml": {
                "name": "HistoriqueMembre"
            }
        },
        "Membre": {
            "required": [
                "id_personne",
                "id_abonnement",
                "date_inscription",
                "debut_abonnement"
            ],
            "properties": {
                "id_membre": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "id_personne": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "id_abonnement": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "date_inscription": {
                    "type": "date",
                    "format": "date",
                    "default": ""
                },
                "debut_abonnement": {
                    "type": "date",
                    "format": "date",
                    "default": ""
                }
            },
            "xml": {
                "name": "Membre"
            }
        },
        "Personne": {
            "required": [
                "nom",
                "prenom",
                "date_naissance",
                "email",
                "cpostal",
                "ville",
                "pays"
            ],
            "properties": {
                "id_personne": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "nom": {
                    "type": "string",
                    "format": "string",
                    "default": ""
                },
                "prenom": {
                    "type": "string",
                    "format": "string",
                    "default": ""
                },
                "date_naissance": {
                    "type": "date",
                    "format": "date",
                    "default": ""
                },
                "email": {
                    "type": "string",
                    "format": "string",
                    "default": ""
                },
                "adresse": {
                    "type": "string",
                    "format": "string",
                    "default": ""
                },
                "cpostal": {
                    "type": "string",
                    "format": "string",
                    "default": ""
                },
                "ville": {
                    "type": "string",
                    "format": "string",
                    "default": ""
                },
                "pays": {
                    "type": "string",
                    "format": "string",
                    "default": ""
                }
            },
            "xml": {
                "name": "Personne"
            }
        },
        "Reduction": {
            "required": [
                "nom",
                "date_debut",
                "date_fin",
                "pourcentage_reduction"
            ],
            "properties": {
                "id_reduction": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "nom": {
                    "type": "string",
                    "format": "string",
                    "default": ""
                },
                "date_debut": {
                    "type": "date",
                    "format": "date",
                    "default": ""
                },
                "date_fin": {
                    "type": "date",
                    "format": "date",
                    "default": ""
                },
                "pourcentage_reduction": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                }
            },
            "xml": {
                "name": "Reduction"
            }
        },
        "Salle": {
            "required": [
                "numero_salle",
                "nom_salle",
                "etage_salle",
                "places"
            ],
            "properties": {
                "id_salle": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "numero_salle": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "nom_salle": {
                    "type": "string",
                    "format": "string",
                    "default": ""
                },
                "etage_salle": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "places": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                }
            },
            "xml": {
                "name": "Salle"
            }
        },
        "Seance": {
            "required": [
                "id_film",
                "id_salle",
                "id_personne_ouvreur",
                "id_personne_technicien",
                "id_personne_menage",
                "debut_seance",
                "fin_seance"
            ],
            "properties": {
                "id": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "id_film": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "id_salle": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "id_personne_ouvreur": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "id_personne_technicien": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "id_personne_menage": {
                    "type": "number",
                    "format": "int64",
                    "default": 1
                },
                "debut_seance": {
                    "type": "date",
                    "format": "date",
                    "default": ""
                },
                "fin_seance": {
                    "type": "date",
                    "format": "date",
                    "default": ""
                }
            },
            "xml": {
                "name": "Seance"
            }
        }
    }
}